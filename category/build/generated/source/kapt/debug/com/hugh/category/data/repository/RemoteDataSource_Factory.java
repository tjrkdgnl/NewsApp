// Generated by Dagger (https://dagger.dev).
package com.hugh.category.data.repository;

import com.hugh.category.data.network.CategoryApiService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RemoteDataSource_Factory implements Factory<RemoteDataSource> {
  private final Provider<CategoryApiService> apiServiceProvider;

  public RemoteDataSource_Factory(Provider<CategoryApiService> apiServiceProvider) {
    this.apiServiceProvider = apiServiceProvider;
  }

  @Override
  public RemoteDataSource get() {
    return newInstance(apiServiceProvider.get());
  }

  public static RemoteDataSource_Factory create(Provider<CategoryApiService> apiServiceProvider) {
    return new RemoteDataSource_Factory(apiServiceProvider);
  }

  public static RemoteDataSource newInstance(CategoryApiService apiService) {
    return new RemoteDataSource(apiService);
  }
}

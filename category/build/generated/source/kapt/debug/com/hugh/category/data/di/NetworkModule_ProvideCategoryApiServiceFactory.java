// Generated by Dagger (https://dagger.dev).
package com.hugh.category.di;

import com.hugh.category.data.network.CategoryApiService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideCategoryApiServiceFactory implements Factory<CategoryApiService> {
  private final Provider<Retrofit> retrofitProvider;

  public NetworkModule_ProvideCategoryApiServiceFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public CategoryApiService get() {
    return provideCategoryApiService(retrofitProvider.get());
  }

  public static NetworkModule_ProvideCategoryApiServiceFactory create(
      Provider<Retrofit> retrofitProvider) {
    return new NetworkModule_ProvideCategoryApiServiceFactory(retrofitProvider);
  }

  public static CategoryApiService provideCategoryApiService(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideCategoryApiService(retrofit));
  }
}
